# -*- coding: utf-8 -*-
#!/usr/bin/env python

# scrapy crawl autohomepromotion -s JOBDIR=autohomepromotion

import sys, time
from scrapy.spider import BaseSpider
from scrapy.selector import Selector
from scrapy.http import Request
from chebaba.items import AutohomePromotionItem
import urllib, urllib2
from HTMLParser import HTMLParser

AUTOHOME_PROMOTION_URL = 'http://localhost/api/promotion'
ALL_DEALERS = [69,370,378,984,994,999,1188,1192,1263,1265,1266,1497,1500,1693,1694,1732,1733,1734,1735,1736,1837,2108,2116,2247,2248,2394,2397,2400,2401,2696,2697,2802,2812,2813,2814,2815,2816,2817,2818,2819,2820,2821,2822,2824,2825,3349,3490,3491,3494,3496,3497,3498,3500,3503,3504,3505,3506,3698,3853,3891,3920,4204,4205,4206,4207,4208,4660,4774,4879,4965,5038,5652,5655,5656,6377,7475,7477,7478,7479,7482,7485,7487,7489,7490,7493,7494,7495,7496,7497,7498,7499,7501,7502,7503,7504,7505,7507,7508,7509,7510,7511,7512,7513,7515,7517,7518,7519,7522,7530,7532,7535,7537,7538,7539,7540,7542,7543,7544,7549,8014,8209,8438,8443,8444,8446,8447,8448,8451,8452,8453,8467,8638,8648,8654,8661,8662,8663,8664,8666,8667,8691,8693,8695,8696,8698,8699,8700,8708,8714,8716,8719,8720,8721,8722,8725,8726,8728,8731,8732,8735,8736,8742,8743,8744,8745,8746,8750,8754,8763,8765,8768,8775,8782,8785,8788,8792,8794,8795,8796,8798,8802,8805,8808,8810,8814,8815,9047,9194,11051,11063,11486,11615,11770,12130,12763,12770,12844,13080,13094,13111,13128,13133,13138,13163,13247,13264,13269,14051,14963,15498,15499,15675,15744,15772,15878,15888,60050,60175,60241,60290,61219,61480,61482,61718,61844,61990,62040,62774,62829,64024,64193,64283,64669,65716,65720,65838,65839,65844,65845,65848,65849,65850,65857,65861,65864,65869,65872,65874,65876,65878,65879,65923,65924,66447,66458,66463,66465,66477,66483,66489,66490,66498,66510,66511,66513,66668,66670,66673,66675,66677,66679,66685,66686,66809,66810,66812,66847,66850,66858,66859,66860,66869,66878,66940,66950,66976,66981,66983,66990,66991,66993,66998,67665,68136,68845,69737,70285,70629,71135,71257,72261,72473,72475,72486,72490,72509,72533,72535,72547,72633,72636,72639,72641,72648,72652,72655,72657,72692,72763,72777,72782,73184,73397,73406,73408,73715,73902,74492,74627,75127,75208,75557,75800,75837,75876,75885,75906,75909,76343,76368,76578,76664,77156,77349,77482,77483,77485,77488,77489,77490,77491,77614,77754,78046,78056,78110,78586,78826,78828,78843,78857,79063,79088,79106,79234,79277,79279,79319,79414,79513,79568,79707,79878,79896,79922,79935,79941,79942,79943,79944,79945,79946,79947,79949,79953,79954,79955,79956,79959,79968,80443,80462,80755,80758,80819,80850,80868,80871,80880,80881,80910,81134,81261,81266,81346,81558,81559,81619,81636,81659,81660,81661,81662,81663,81667,81668,81670,81676,81677,81678,81701,81708,81711,81717,81722,81723,81724,81726,81738,81739,81740,81741,81742,81744,81754,81862,81889,81906,81948,81950,81965,82006,82038,82100,82143,82149,82226,82659,82673,82843,82876,82981,83086,83249,83269,83361,83489,83545,83774,84049,84125,84413,84431,84723,84955,84991,85011,85020,85106,85111,85173,85211,85306,85315,85440,85545,85627,85698,85731,85910,86040,86169,87910,97540,97541,97542,97548,97611,97623,97659,97682,97707,97841,98228,98979,99048,99197,99200,99416,99735,99841,100011,100255,100282,100385,100453,101097,101173,101405,101611,101666,101675,101859,101947,101988,101992,102039,102064,102088,102140,102301,102479,102507,102709,102778,103112,103113,103217,103369,103374,103385,103392,103393,103396,103404,103416,103417,103420,103669,103734,103737,103743,103745,104061,104065,104072,104074,104075,104076,104117,104635,104939,105345,105361,105417,107535,107579,108381,108386,110372,111017,111074,111233,111557,111623,111625,111913,112093,112096,112097,112098,112099,112101,112105,112107,112108,112959,113327,113328,114496,115096,115133,116491,117226,117227,117519,118167,118390,118430,118623,118632,118758,118877,118933,118935,118936,118975,119057,119153,119154,119194,119431,119432,119434,119436,119437,119438,119442,119594,119609,119733,119737,119791,119846,119847,119848,120107,120286,120290,120315,120338,120379,120429,120442,120529,120650,120659,120716,120914,120960,121008,121085,121146,121260,121523,121544,121545,121625,121912,122393,122448,122539,122591,122776,122927,122928,122994,123082,123100,123501,123531,123676,123897,124172,124259,124262,124321,124353,124631,125022,125040,125062,125072,125076,125086,125101,125106,125107,125108,125109,125110,125113,125114,125115,125124,125191,125237,125238,125239,125240,125241,125242,125243,125244,125245,125246,125248,125249,125250,125429,125510,125543,125571,125615,125700,125718,125766,125797,125857,126089,126136,126186,126222,126563,126608,126673,126845,126847,126849,126874,127474,128243,128244,128764,128988,128989,129015,129195,129209,129261,129330,129544,129813,129922,130111,130146,130435,2001673,2001970,2002792,2002793,2002794,2002812,2002813,2002895,2003193,2003303,2003713,2003734,2004015,2004624,2004883,2004884,2005295,2005299,2005300,2005309,2005372,2005374,2005375,2005376,2005379,2005381,2005398,2005738,2006420,2006421,2006422,2006423,2015469,2015717,2015771,2016019,2016023,2016024,2016025,2016026,2016027,2016028,2016029,2016030,2016035,2016036,2016037,2016042,2016122,2016132,2016397,2016453,2016479,2016486,2016489,2016491,2016492,2016502,2016515,2016701,2016702,2016703,2016704,2016705,2016927,2017096,2017108,2017109,2017111,2017129,2017528,2017632,2018179,2018180,2018181,2018182,2018183]
PAGE_COUNT = 10

def doPost(url, data):
    if not data: return
    request = urllib2.Request(url, urllib.urlencode(data))
    response = urllib2.urlopen(request).read()
    return response

def filt(string, start, end):
    if not string: return
    i = string.find(start) + len(start)
    j = string[i:].find(end)
    return string[i : i + j]

def stripTags(html):
    html = html.strip().strip('\r').strip('\n')
    result = []
    parser = HTMLParser()
    parser.handle_data = result.append
    parser.feed(html)
    parser.close()
    return ''.join(result)

class AutohomePromotionSpider(BaseSpider):
    reload(sys)
    sys.setdefaultencoding('utf-8')

    name = 'autohomepromotion'
    allowed_domains = ['dealer.autohome.com.cn']
    urls = []
    for dealer in ALL_DEALERS:
        urls.append('http://dealer.autohome.com.cn/' + str(dealer) + '/newslist.html')
    start_urls = urls

    def parse(self, response):
        print 'page_url:', response.url
        sel = Selector(response)
        trs = sel.xpath('//dl[@class="promot-dl "]/dd/p/a/@href').extract()
        for tr in trs:
            url = response.urljoin(tr)
            yield Request(url, self.parsePromotion)

        np = sel.xpath('//a[@class="page-next "]/@href').extract()
        pn = sel.xpath('//div[@class="page dealer-page"]/a[@class="current"]/text()').extract()
        if np:
            url = response.urljoin(np[0])
            if int(pn[0]) <= PAGE_COUNT:
                yield Request(url, self.parse)

    def parsePromotion(self, response):
        sel = Selector(response)
        item = AutohomePromotionItem()

        tmp = sel.xpath('//p[@class="cont-time"]/text()')
        if not tmp: tmp = sel.xpath('//span[@class="red"]/text()')
        if not tmp: return
        tmp = tmp.extract()[0].replace(u'促销时间', '')
        if u'.' in tmp: tmp = tmp.split(u'-')   # 2015.05.31-2015.06.04
        else: tmp = tmp.split(u' - ')           # 2015-05-31 - 2015-06-04
        item['datefrom'] = tmp[0]
        item['dateto'] = tmp[1]

        tmp = sel.xpath('//div[@class="dealertext"]/p[2]')
        if tmp: item['content'] = stripTags(tmp.extract()[0])
        else: return

        item['title'] = sel.xpath('//p[@class="title-text"]/text()').extract()[0]

        tmp = sel.xpath('//input[@id="SeriesName"]/@value').extract()
        if tmp: item['series_name'] = tmp[0]
        else: tmp = sel.xpath('//p[@class="name-text font-yh"]/a/text()').extract()
        if not tmp: return
        item['series_name'] = tmp[0]

        tmp = sel.xpath('//input[@id="SeriesId"]/@value').extract()
        if tmp: item['series_id'] = tmp[0]
        else:
            tmp = sel.xpath('//p[@class="name-text font-yh"]/a/@href').extract()
            if tmp: item['series_id'] = filt(tmp[0], 'b_', '.')
            else: return

        tables = sel.xpath('//div[@class="dealertext"]/table/tbody/tr')
        ts = []
        if tables:
            for table in tables:
                t = {}
                tmp = table.xpath('td[4]/a/@href')
                if not tmp: continue # filt th row
                t['modelid'] = filt(tmp.extract()[0], 'order_'+item['series_id']+'_', '.')
                t['model'] = table.xpath('td[1]/text()').extract()[0].replace(item['series_name'] + ' ', '').replace(u' ', '')
                t['off'] = stripTags(table.xpath('td[3]').extract()[0].replace(u'↓', '').replace('\r\n', '').replace(u' ', ''))
                ts.append(t)
        item['prices'] = ts
        item['dealer'] = sel.xpath('//div[@class="text-main"]/text()').extract()[0]
        item['dealerid'] = sel.xpath('//li[@id="nav_0"]/a/@href').extract()[0].replace('/', '')
        print '\t', item['dealer'], item['series_name'], item['title'],
        doPost(AUTOHOME_PROMOTION_URL, item)
